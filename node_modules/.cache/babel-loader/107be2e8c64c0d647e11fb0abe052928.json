{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/user/weather-app/src/components/home.jsx\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { MdLocationOn } from \"react-icons/md\";\nimport SecondComponent from \"./SecondComponent\";\nimport WeatherReport from \"./WeatherReport\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { API_KEY, GEO_API_KEY, countryChoices } from \"../constants\";\nimport Autosuggest from 'react-autosuggest';\nimport Autocomplete from 'react-autocomplete';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst getSuggestions = value => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  return inputLength === 0 ? [] : countryChoices.filter(lang => lang.name.toLowerCase().slice(0, inputLength) === inputValue);\n};\n\nconst getSuggestionValue = suggestion => suggestion.name; // Use your imagination to render suggestions.\n\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weekArr: [{\n        id: 1,\n        day: \"Sun\",\n        maxTemp: 28,\n        minTemp: 19,\n        status: \"Sunny\"\n      }, {\n        id: 2,\n        day: \"Mon\",\n        maxTemp: 23,\n        minTemp: 14,\n        status: \"Sunny\"\n      }, {\n        id: 3,\n        day: \"Tue\",\n        maxTemp: 27,\n        minTemp: 19,\n        status: \"Sunny\"\n      }, {\n        id: 4,\n        day: \"Wed\",\n        maxTemp: 30,\n        minTemp: 26,\n        status: \"Cloudy\"\n      }, {\n        id: 5,\n        day: \"Thu\",\n        maxTemp: 22,\n        minTemp: 11,\n        status: \"Sunny\"\n      }, {\n        id: 6,\n        day: \"Fri\",\n        maxTemp: 27,\n        minTemp: 17,\n        status: \"Rainfall\"\n      }, {\n        id: 7,\n        day: \"Sat\",\n        maxTemp: 21,\n        minTemp: 12,\n        status: \"Sunny\"\n      }],\n      geoLocCity: '',\n      weatherUpdate: null,\n      value: '',\n      suggestions: [],\n      setMarginTop: false,\n      count: 24,\n      activeDay: new Date().getDay()\n    };\n\n    this.onChange = (event, {\n      newValue\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.renderSuggestion = suggestion => {\n      this.setState({\n        setMarginTop: true\n      });\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          borderBottom: '1px solid black',\n          display: 'flex',\n          flexDirection: 'column',\n          //height: 65,\n          width: '425%',\n          background: 'white'\n        },\n        children: suggestion.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.renderInputComponent = inputProps => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#ffff'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          height: 40,\n          border: 'none',\n          width: '300%'\n        },\n        placeholder: \"Search for a location\",\n        onMouseOut: () => {\n          this.setState({\n            setMarginTop: false\n          });\n        },\n        onMouseLeave: () => {\n          this.setState({\n            setMarginTop: false\n          });\n        },\n        onMouseUp: () => {\n          this.setState({\n            setMarginTop: false\n          });\n        },\n        onMouseDown: () => {\n          this.setState({\n            setMarginTop: false\n          });\n        },\n        onChange: e => this.setState({\n          geoLocCity: e.target.value\n        }),\n        ...inputProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this);\n\n    this.getUserLocation = () => {\n      fetch(`https://geolocation-db.com/json/${GEO_API_KEY}`).then(response => response.json()).then(responseData => {\n        this.setState({\n          value: responseData.city\n        });\n      });\n    };\n\n    this.getWeatherUpdate = (maxTemp, minTemp) => {\n      let {\n        weekArr\n      } = this.state;\n      let activeIndex = new Date().getDay();\n      weekArr[activeIndex].maxTemp = maxTemp;\n      weekArr[activeIndex].minTemp = minTemp;\n      this.setState({\n        weekArr: weekArr\n      });\n    };\n\n    this.handleClick = (activeIndex, keyVal) => {\n      if (activeIndex === keyVal) {\n        this.setState({\n          count: 24\n        });\n      } else if (activeIndex + 1 === keyVal) {\n        this.setState({\n          count: 48\n        });\n      }\n\n      this.setState({\n        activeDay: keyVal\n      });\n    };\n  }\n\n  componentDidMount() {\n    confirmAlert({\n      title: \"Weather App wants to know your location\",\n      message: \"\",\n      buttons: [{\n        label: \"Yes\",\n        onClick: this.getUserLocation\n      }, {\n        label: \"No\"\n      }]\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.value !== this.state.value || prevState.count !== this.state.count) {\n      let city = this.state.value;\n      fetch(`http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${city}&cnt=${this.state.count}&appid=${API_KEY}`).then(response => response.json()).then(responseData => {\n        this.setState({\n          weatherUpdate: responseData\n        });\n      });\n    }\n  }\n\n  render() {\n    let activeIndex = new Date().getDay();\n    let {\n      value,\n      suggestions\n    } = this.state;\n    const inputProps = {\n      placeholder: 'Enter a city',\n      value,\n      onChange: this.onChange\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.mainStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.boxStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            width: \"25%\",\n            justifyContent: 'space-between',\n            flexDirection: 'row'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MdLocationOn, {\n            size: \"2em\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n            suggestions: suggestions,\n            onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n            onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n            getSuggestionValue: getSuggestionValue,\n            renderSuggestion: this.renderSuggestion,\n            renderInputComponent: this.renderInputComponent,\n            inputProps: inputProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FaSearch, {\n          size: \"2em\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), !this.state.setMarginTop ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          marginTop: this.state.setMarginTop ? \"50%\" : \"4%\",\n          flexDirection: \"row\",\n          flexGrow: 1,\n          width: \"100%\"\n        },\n        children: this.state.weekArr.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(SecondComponent, {\n            keyVal: index,\n            data: item,\n            activeDay: this.state.activeDay,\n            onClick: this.handleClick,\n            activeIndex: activeIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this) : null, !this.state.setMarginTop ? /*#__PURE__*/_jsxDEV(WeatherReport, {\n        data: this.state.weekArr[activeIndex],\n        getWeatherUpdate: this.getWeatherUpdate,\n        weatherUpdate: this.state.weatherUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst styles = {\n  mainStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"1.6%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    flexDirection: \"column\"\n  },\n  boxStyle: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: 80,\n    borderRadius: 8,\n    padding: \"1.6%\",\n    justifyContent: \"space-between\",\n    boxShadow: \"1px 4px 6px 1px #9E9E9E\",\n    width: \"100%\"\n  },\n  secondDiv: {\n    display: \"flex\",\n    marginTop: \"4%\",\n    flexDirection: \"row\",\n    flexGrow: 1,\n    width: \"100%\"\n  }\n};\nexport default Home;","map":{"version":3,"sources":["/home/user/weather-app/src/components/home.jsx"],"names":["React","Component","FaSearch","MdLocationOn","SecondComponent","WeatherReport","confirmAlert","API_KEY","GEO_API_KEY","countryChoices","Autosuggest","Autocomplete","GooglePlacesAutocomplete","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","filter","lang","name","slice","getSuggestionValue","suggestion","Home","state","weekArr","id","day","maxTemp","minTemp","status","geoLocCity","weatherUpdate","suggestions","setMarginTop","count","activeDay","Date","getDay","onChange","event","newValue","setState","renderSuggestion","borderBottom","display","flexDirection","width","background","onSuggestionsFetchRequested","onSuggestionsClearRequested","renderInputComponent","inputProps","height","border","e","target","getUserLocation","fetch","then","response","json","responseData","city","getWeatherUpdate","activeIndex","handleClick","keyVal","componentDidMount","title","message","buttons","label","onClick","componentDidUpdate","prevProps","prevState","render","placeholder","styles","mainStyle","boxStyle","justifyContent","marginTop","flexGrow","map","item","index","alignItems","margin","marginLeft","marginRight","borderRadius","padding","boxShadow","secondDiv"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,cAA/B,QAAoD,cAApD;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,wBAAP,MAAqC,kCAArC;AACA,OAAO,iDAAP;;AAGA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAC9B,QAAMC,UAAU,GAAGD,KAAK,CAACE,IAAN,GAAaC,WAAb,EAAnB;AACA,QAAMC,WAAW,GAAGH,UAAU,CAACI,MAA/B;AAEA,SAAOD,WAAW,KAAK,CAAhB,GAAoB,EAApB,GAAyBT,cAAc,CAACW,MAAf,CAAsBC,IAAI,IACxDA,IAAI,CAACC,IAAL,CAAUL,WAAV,GAAwBM,KAAxB,CAA8B,CAA9B,EAAiCL,WAAjC,MAAkDH,UADpB,CAAhC;AAGD,CAPD;;AASA,MAAMS,kBAAkB,GAAGC,UAAU,IAAIA,UAAU,CAACH,IAApD,C,CAEA;;;AAKA,MAAMI,IAAN,SAAmBzB,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3B0B,KAD2B,GACnB;AACNC,MAAAA,OAAO,EAAE,CACP;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,GAAG,EAAE,KAAd;AAAqBC,QAAAA,OAAO,EAAE,EAA9B;AAAkCC,QAAAA,OAAO,EAAE,EAA3C;AAA+CC,QAAAA,MAAM,EAAE;AAAvD,OADO,EAEP;AAAEJ,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,GAAG,EAAE,KAAd;AAAqBC,QAAAA,OAAO,EAAE,EAA9B;AAAkCC,QAAAA,OAAO,EAAE,EAA3C;AAA+CC,QAAAA,MAAM,EAAE;AAAvD,OAFO,EAGP;AAAEJ,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,GAAG,EAAE,KAAd;AAAqBC,QAAAA,OAAO,EAAE,EAA9B;AAAkCC,QAAAA,OAAO,EAAE,EAA3C;AAA+CC,QAAAA,MAAM,EAAE;AAAvD,OAHO,EAIP;AAAEJ,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,GAAG,EAAE,KAAd;AAAqBC,QAAAA,OAAO,EAAE,EAA9B;AAAkCC,QAAAA,OAAO,EAAE,EAA3C;AAA+CC,QAAAA,MAAM,EAAE;AAAvD,OAJO,EAKP;AAAEJ,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,GAAG,EAAE,KAAd;AAAqBC,QAAAA,OAAO,EAAE,EAA9B;AAAkCC,QAAAA,OAAO,EAAE,EAA3C;AAA+CC,QAAAA,MAAM,EAAE;AAAvD,OALO,EAMP;AAAEJ,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,GAAG,EAAE,KAAd;AAAqBC,QAAAA,OAAO,EAAE,EAA9B;AAAkCC,QAAAA,OAAO,EAAE,EAA3C;AAA+CC,QAAAA,MAAM,EAAE;AAAvD,OANO,EAOP;AAAEJ,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,GAAG,EAAE,KAAd;AAAqBC,QAAAA,OAAO,EAAE,EAA9B;AAAkCC,QAAAA,OAAO,EAAE,EAA3C;AAA+CC,QAAAA,MAAM,EAAE;AAAvD,OAPO,CADH;AAUNC,MAAAA,UAAU,EAAE,EAVN;AAWNC,MAAAA,aAAa,EAAE,IAXT;AAYNrB,MAAAA,KAAK,EAAE,EAZD;AAaNsB,MAAAA,WAAW,EAAE,EAbP;AAcNC,MAAAA,YAAY,EAAE,KAdR;AAeNC,MAAAA,KAAK,EAAE,EAfD;AAgBNC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,MAAX;AAhBL,KADmB;;AAAA,SAsB3BC,QAtB2B,GAsBhB,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAyB;AAClC,WAAKC,QAAL,CAAc;AACZ/B,QAAAA,KAAK,EAAE8B;AADK,OAAd;AAGD,KA1B0B;;AAAA,SA4B1BE,gBA5B0B,GA4BPrB,UAAU,IAAI;AAChC,WAAKoB,QAAL,CAAc;AACZR,QAAAA,YAAY,EAAE;AADF,OAAd;AAGA,0BACE;AAAG,QAAA,KAAK,EAAE;AACRU,UAAAA,YAAY,EAAE,iBADN;AAERC,UAAAA,OAAO,EAAE,MAFD;AAGTC,UAAAA,aAAa,EAAE,QAHN;AAIV;AACAC,UAAAA,KAAK,EAAE,MALG;AAMVC,UAAAA,UAAU,EAAE;AANF,SAAV;AAAA,kBAQC1B,UAAU,CAACH;AARZ;AAAA;AAAA;AAAA;AAAA,cADF;AAWA,KA3CyB;;AAAA,SA+C3B8B,2BA/C2B,GA+CG,CAAC;AAAEtC,MAAAA;AAAF,KAAD,KAAe;AAC3C,WAAK+B,QAAL,CAAc;AACZT,QAAAA,WAAW,EAAEvB,cAAc,CAACC,KAAD;AADf,OAAd;AAGD,KAnD0B;;AAAA,SAsD3BuC,2BAtD2B,GAsDG,MAAM;AAClC,WAAKR,QAAL,CAAc;AACZT,QAAAA,WAAW,EAAE;AADD,OAAd;AAGD,KA1D0B;;AAAA,SA4D3BkB,oBA5D2B,GA4DJC,UAAU,iBAC/B;AAAK,MAAA,KAAK,EAAE;AAAEJ,QAAAA,UAAU,EAAE;AAAd,OAAZ;AAAA,6BACE;AAEQ,QAAA,KAAK,EAAE;AAAEK,UAAAA,MAAM,EAAE,EAAV;AAAcC,UAAAA,MAAM,EAAE,MAAtB;AAA8BP,UAAAA,KAAK,EAAE;AAArC,SAFf;AAGQ,QAAA,WAAW,EAAE,uBAHrB;AAIQ,QAAA,UAAU,EAAE,MAAM;AAChB,eAAKL,QAAL,CAAc;AACZR,YAAAA,YAAY,EAAE;AADF,WAAd;AAGD,SART;AASQ,QAAA,YAAY,EAAE,MAAM;AAClB,eAAKQ,QAAL,CAAc;AACZR,YAAAA,YAAY,EAAE;AADF,WAAd;AAGD,SAbT;AAcQ,QAAA,SAAS,EAAE,MAAM;AACf,eAAKQ,QAAL,CAAc;AACZR,YAAAA,YAAY,EAAE;AADF,WAAd;AAGD,SAlBT;AAmBQ,QAAA,WAAW,EAAE,MAAM;AACjB,eAAKQ,QAAL,CAAc;AACZR,YAAAA,YAAY,EAAE;AADF,WAAd;AAGD,SAvBT;AAwBQ,QAAA,QAAQ,EAAEqB,CAAC,IACT,KAAKb,QAAL,CAAc;AACZX,UAAAA,UAAU,EAAEwB,CAAC,CAACC,MAAF,CAAS7C;AADT,SAAd,CAzBV;AAAA,WA6BYyC;AA7BZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA7DyB;;AAAA,SAmG3BK,eAnG2B,GAmGT,MAAM;AACtBC,MAAAA,KAAK,CAAE,mCAAkCrD,WAAY,EAAhD,CAAL,CACGsD,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,YAAY,IAAI;AACpB,aAAKpB,QAAL,CAAc;AACZ/B,UAAAA,KAAK,EAAEmD,YAAY,CAACC;AADR,SAAd;AAGD,OANH;AAOD,KA3G0B;;AAAA,SA8G3BC,gBA9G2B,GA8GR,CAACpC,OAAD,EAAUC,OAAV,KAAsB;AACvC,UAAI;AAACJ,QAAAA;AAAD,UAAY,KAAKD,KAArB;AACA,UAAIyC,WAAW,GAAG,IAAI5B,IAAJ,GAAWC,MAAX,EAAlB;AACAb,MAAAA,OAAO,CAACwC,WAAD,CAAP,CAAqBrC,OAArB,GAA+BA,OAA/B;AACAH,MAAAA,OAAO,CAACwC,WAAD,CAAP,CAAqBpC,OAArB,GAA+BA,OAA/B;AACA,WAAKa,QAAL,CAAc;AACVjB,QAAAA,OAAO,EAAEA;AADC,OAAd;AAGD,KAtH0B;;AAAA,SAwI3ByC,WAxI2B,GAwIb,CAACD,WAAD,EAAcE,MAAd,KAAyB;AACrC,UAAIF,WAAW,KAAKE,MAApB,EAA4B;AAC1B,aAAKzB,QAAL,CAAc;AACZP,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD,OAJD,MAIO,IAAI8B,WAAW,GAAG,CAAd,KAAoBE,MAAxB,EAAgC;AACrC,aAAKzB,QAAL,CAAc;AACZP,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD;;AACD,WAAKO,QAAL,CAAc;AACZN,QAAAA,SAAS,EAAE+B;AADC,OAAd;AAGD,KArJ0B;AAAA;;AAwH3BC,EAAAA,iBAAiB,GAAG;AAClBjE,IAAAA,YAAY,CAAC;AACXkE,MAAAA,KAAK,EAAE,yCADI;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,KAAK,EAAE,KADT;AAEEC,QAAAA,OAAO,EAAE,KAAKhB;AAFhB,OADO,EAKP;AACEe,QAAAA,KAAK,EAAE;AADT,OALO;AAHE,KAAD,CAAZ;AAaD;;AAiBDE,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAIA,SAAS,CAACjE,KAAV,KAAoB,KAAKa,KAAL,CAAWb,KAA/B,IAAwCiE,SAAS,CAACzC,KAAV,KAAoB,KAAKX,KAAL,CAAWW,KAA3E,EAAkF;AAChF,UAAI4B,IAAI,GAAG,KAAKvC,KAAL,CAAWb,KAAtB;AACA+C,MAAAA,KAAK,CACF,4DAA2DK,IAAK,QAAO,KAAKvC,KAAL,CAAWW,KAAM,UAAS/B,OAAQ,EADvG,CAAL,CAGGuD,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAIGF,IAJH,CAIQG,YAAY,IAAI;AACpB,aAAKpB,QAAL,CAAc;AACZV,UAAAA,aAAa,EAAE8B;AADH,SAAd;AAGD,OARH;AASD;AACF;;AAEDe,EAAAA,MAAM,GAAG;AACP,QAAIZ,WAAW,GAAG,IAAI5B,IAAJ,GAAWC,MAAX,EAAlB;AACA,QAAI;AAAE3B,MAAAA,KAAF;AAASsB,MAAAA;AAAT,QAAyB,KAAKT,KAAlC;AACA,UAAM4B,UAAU,GAAG;AACjB0B,MAAAA,WAAW,EAAE,cADI;AAEjBnE,MAAAA,KAFiB;AAGjB4B,MAAAA,QAAQ,EAAE,KAAKA;AAHE,KAAnB;AAOA,wBACE;AAAK,MAAA,KAAK,EAAEwC,MAAM,CAACC,SAAnB;AAAA,8BACE;AAAK,QAAA,KAAK,EAAED,MAAM,CAACE,QAAnB;AAAA,gCACE;AAAK,UAAA,KAAK,EAAE;AAAEpC,YAAAA,OAAO,EAAE,MAAX;AACbE,YAAAA,KAAK,EAAE,KADM;AAEbmC,YAAAA,cAAc,EAAE,eAFH;AAGZpC,YAAAA,aAAa,EAAE;AAHH,WAAZ;AAAA,kCAIA,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAJA,eAKC,QAAC,WAAD;AACD,YAAA,WAAW,EAAEb,WADZ;AAED,YAAA,2BAA2B,EAAE,KAAKgB,2BAFjC;AAGD,YAAA,2BAA2B,EAAE,KAAKC,2BAHjC;AAID,YAAA,kBAAkB,EAAE7B,kBAJnB;AAKD,YAAA,gBAAgB,EAAE,KAAKsB,gBALtB;AAMD,YAAA,oBAAoB,EAAE,KAAKQ,oBAN1B;AAOD,YAAA,UAAU,EAAEC;AAPX;AAAA;AAAA;AAAA;AAAA,kBALD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAmBG,CAAC,KAAK5B,KAAL,CAAWU,YAAZ,gBACD;AAAK,QAAA,KAAK,EAAE;AAChBW,UAAAA,OAAO,EAAE,MADO;AAEhBsC,UAAAA,SAAS,EAAE,KAAK3D,KAAL,CAAWU,YAAX,GAA0B,KAA1B,GAAkC,IAF7B;AAGhBY,UAAAA,aAAa,EAAE,KAHC;AAIhBsC,UAAAA,QAAQ,EAAE,CAJM;AAKhBrC,UAAAA,KAAK,EAAE;AALS,SAAZ;AAAA,kBAOG,KAAKvB,KAAL,CAAWC,OAAX,CAAmB4D,GAAnB,CAAuB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvC,8BACE,QAAC,eAAD;AACE,YAAA,MAAM,EAAEA,KADV;AAEE,YAAA,IAAI,EAAED,IAFR;AAGE,YAAA,SAAS,EAAE,KAAK9D,KAAL,CAAWY,SAHxB;AAIE,YAAA,OAAO,EAAE,KAAK8B,WAJhB;AAKE,YAAA,WAAW,EAAED;AALf;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,SAVA;AAPH;AAAA;AAAA;AAAA;AAAA,cADC,GAmBS,IAtCZ,EAuCG,CAAC,KAAKzC,KAAL,CAAWU,YAAZ,gBACD,QAAC,aAAD;AACE,QAAA,IAAI,EAAE,KAAKV,KAAL,CAAWC,OAAX,CAAmBwC,WAAnB,CADR;AAEE,QAAA,gBAAgB,EAAE,KAAKD,gBAFzB;AAGE,QAAA,aAAa,EAAE,KAAKxC,KAAL,CAAWQ;AAH5B;AAAA;AAAA;AAAA;AAAA,cADC,GAKM,IA5CT;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgDD;;AAhO0B;;AAmO7B,MAAM+C,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTnC,IAAAA,OAAO,EAAE,MADA;AAET2C,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,MAAM,EAAE,MAHC;AAITC,IAAAA,UAAU,EAAE,KAJH;AAKTC,IAAAA,WAAW,EAAE,KALJ;AAMT7C,IAAAA,aAAa,EAAE;AANN,GADE;AASbmC,EAAAA,QAAQ,EAAE;AACRpC,IAAAA,OAAO,EAAE,MADD;AAERC,IAAAA,aAAa,EAAE,KAFP;AAGRO,IAAAA,MAAM,EAAE,EAHA;AAIRuC,IAAAA,YAAY,EAAE,CAJN;AAKRC,IAAAA,OAAO,EAAE,MALD;AAMRX,IAAAA,cAAc,EAAE,eANR;AAORY,IAAAA,SAAS,EAAE,yBAPH;AAQR/C,IAAAA,KAAK,EAAE;AARC,GATG;AAmBbgD,EAAAA,SAAS,EAAE;AACTlD,IAAAA,OAAO,EAAE,MADA;AAETsC,IAAAA,SAAS,EAAE,IAFF;AAGTrC,IAAAA,aAAa,EAAE,KAHN;AAITsC,IAAAA,QAAQ,EAAE,CAJD;AAKTrC,IAAAA,KAAK,EAAE;AALE;AAnBE,CAAf;AA4BA,eAAexB,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { MdLocationOn } from \"react-icons/md\";\nimport SecondComponent from \"./SecondComponent\";\nimport WeatherReport from \"./WeatherReport\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { API_KEY, GEO_API_KEY, countryChoices} from \"../constants\";\nimport Autosuggest from 'react-autosuggest';\nimport Autocomplete from 'react-autocomplete';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete'; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\n\nconst getSuggestions = value => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n\n  return inputLength === 0 ? [] : countryChoices.filter(lang =>\n    lang.name.toLowerCase().slice(0, inputLength) === inputValue\n  );\n};\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\n// Use your imagination to render suggestions.\n\n\n\n\nclass Home extends Component {\n  state = {\n    weekArr: [\n      { id: 1, day: \"Sun\", maxTemp: 28, minTemp: 19, status: \"Sunny\" },\n      { id: 2, day: \"Mon\", maxTemp: 23, minTemp: 14, status: \"Sunny\" },\n      { id: 3, day: \"Tue\", maxTemp: 27, minTemp: 19, status: \"Sunny\" },\n      { id: 4, day: \"Wed\", maxTemp: 30, minTemp: 26, status: \"Cloudy\" },\n      { id: 5, day: \"Thu\", maxTemp: 22, minTemp: 11, status: \"Sunny\" },\n      { id: 6, day: \"Fri\", maxTemp: 27, minTemp: 17, status: \"Rainfall\" },\n      { id: 7, day: \"Sat\", maxTemp: 21, minTemp: 12, status: \"Sunny\" }\n    ],\n    geoLocCity: '',\n    weatherUpdate: null,\n    value: '',\n    suggestions: [],\n    setMarginTop: false,\n    count: 24,\n    activeDay: new Date().getDay()\n  };\n\n\n/** experimental */\n  onChange = (event, { newValue }) => {\n    this.setState({\n      value: newValue\n    });\n  };\n\n   renderSuggestion = suggestion => {\n    this.setState({\n      setMarginTop: true\n    })\n    return(\n      <p style={{\n        borderBottom: '1px solid black',\n        display: 'flex',\n       flexDirection: 'column', \n      //height: 65,\n      width: '425%' ,\n      background: 'white',\n       }}>\n      {suggestion.name}\n      </p>\n  )};\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value)\n    });\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  renderInputComponent = inputProps => (\n    <div style={{ background: '#ffff',}}>\n      <input\n             \n              style={{ height: 40, border: 'none', width: '300%' }}\n              placeholder={\"Search for a location\"}\n              onMouseOut={() => {\n                this.setState({ \n                  setMarginTop: false\n                })\n              }}\n              onMouseLeave={() => {\n                this.setState({ \n                  setMarginTop: false\n                })\n              }}\n              onMouseUp={() => {\n                this.setState({ \n                  setMarginTop: false\n                })\n              }}\n              onMouseDown={() => {\n                this.setState({ \n                  setMarginTop: false\n                })\n              }}\n              onChange={e =>\n                this.setState({\n                  geoLocCity: e.target.value\n                })\n              }\n              {...inputProps}\n            /> \n      {/* <div>custom stuff</div> */}\n    </div>\n  );\n\n  /** experimental */\n\n  getUserLocation = () => {\n    fetch(`https://geolocation-db.com/json/${GEO_API_KEY}`)\n      .then(response => response.json())\n      .then(responseData => {\n        this.setState({\n          value: responseData.city\n        });\n      });\n  };\n  \n\n  getWeatherUpdate = (maxTemp, minTemp) => {\n    let {weekArr} = this.state;\n    let activeIndex = new Date().getDay();\n    weekArr[activeIndex].maxTemp = maxTemp;\n    weekArr[activeIndex].minTemp = minTemp;\n    this.setState({\n        weekArr: weekArr\n    })\n  };\n\n  componentDidMount() {\n    confirmAlert({\n      title: \"Weather App wants to know your location\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: this.getUserLocation\n        },\n        {\n          label: \"No\"\n        }\n      ]\n    });\n  }\n\n  handleClick = (activeIndex, keyVal) => {\n    if (activeIndex === keyVal) {\n      this.setState({\n        count: 24\n      })\n    } else if (activeIndex + 1 === keyVal) {\n      this.setState({\n        count: 48\n      })\n    }\n    this.setState({\n      activeDay: keyVal\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.value !== this.state.value || prevState.count !== this.state.count) {\n      let city = this.state.value;\n      fetch(\n        `http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${city}&cnt=${this.state.count}&appid=${API_KEY}`\n      )\n        .then(response => response.json())\n        .then(responseData => {\n          this.setState({\n            weatherUpdate: responseData\n          });\n        });\n    }\n  }\n\n  render() {\n    let activeIndex = new Date().getDay();\n    let { value, suggestions } = this.state;\n    const inputProps = {\n      placeholder: 'Enter a city',\n      value,\n      onChange: this.onChange\n    };\n\n\n    return (\n      <div style={styles.mainStyle}>\n        <div style={styles.boxStyle}>\n          <div style={{ display: 'flex', \n         width: \"25%\",\n         justifyContent: 'space-between',\n          flexDirection: 'row', }}>\n          <MdLocationOn size=\"2em\" />\n           <Autosuggest\n          suggestions={suggestions}\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n          getSuggestionValue={getSuggestionValue}\n          renderSuggestion={this.renderSuggestion}\n          renderInputComponent={this.renderInputComponent}\n          inputProps={inputProps}\n        />\n          </div>\n          <FaSearch size=\"2em\" />\n        </div>\n        {!this.state.setMarginTop ? (\n        <div style={{\n    display: \"flex\",\n    marginTop: this.state.setMarginTop ? \"50%\" : \"4%\",\n    flexDirection: \"row\",\n    flexGrow: 1,\n    width: \"100%\"\n  }}>\n          {this.state.weekArr.map((item, index) => {\n            return (\n              <SecondComponent\n                keyVal={index}\n                data={item}\n                activeDay={this.state.activeDay}\n                onClick={this.handleClick}\n                activeIndex={activeIndex}\n              />\n            );\n          })}\n        </div>) : null}\n        {!this.state.setMarginTop ? (\n        <WeatherReport\n          data={this.state.weekArr[activeIndex]}\n          getWeatherUpdate={this.getWeatherUpdate}\n          weatherUpdate={this.state.weatherUpdate}\n        /> ) : null}\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  mainStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"1.6%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    flexDirection: \"column\"\n  },\n  boxStyle: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: 80,\n    borderRadius: 8,\n    padding: \"1.6%\",\n    justifyContent: \"space-between\",\n    boxShadow: \"1px 4px 6px 1px #9E9E9E\",\n    width: \"100%\"\n  },\n  secondDiv: {\n    display: \"flex\",\n    marginTop: \"4%\",\n    flexDirection: \"row\",\n    flexGrow: 1,\n    width: \"100%\"\n  }\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}