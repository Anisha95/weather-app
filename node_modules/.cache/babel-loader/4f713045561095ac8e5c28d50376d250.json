{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/anisha/new-test/new-test/src/components/home.jsx\";\nimport React, { Component } from \"react\";\nimport '../App.css';\nimport { FaSearch } from 'react-icons/fa';\nimport { MdLocationOn } from 'react-icons/md';\nimport SecondComponent from './SecondComponent';\nimport WeatherReport from './WeatherReport';\nimport { confirmAlert } from 'react-confirm-alert';\nimport { API_KEY, GEO_API_KEY } from '../constants';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weekArr: [{\n        id: 1,\n        day: 'Sun',\n        maxTemp: 28,\n        minTemp: 19,\n        status: 'Sunny'\n      }, {\n        id: 2,\n        day: 'Mon',\n        maxTemp: 23,\n        minTemp: 14,\n        status: 'Cloudy'\n      }, {\n        id: 3,\n        day: 'Tue',\n        maxTemp: 27,\n        minTemp: 19,\n        status: 'Sunny'\n      }, {\n        id: 4,\n        day: 'Wed',\n        maxTemp: 30,\n        minTemp: 26,\n        status: 'Sunny'\n      }, {\n        id: 5,\n        day: 'Thu',\n        maxTemp: 22,\n        minTemp: 11,\n        status: 'Sunny'\n      }, {\n        id: 6,\n        day: 'Fri',\n        maxTemp: 27,\n        minTemp: 17,\n        status: 'Rainfall'\n      }, {\n        id: 7,\n        day: 'Sat',\n        maxTemp: 21,\n        minTemp: 12,\n        status: 'Sunny'\n      }],\n      geoLocCity: null,\n      weatherUpdate: null\n    };\n\n    this.getUserLocation = () => {\n      //console.log('11111 -> 0 api call geoloc');\n      fetch(`https://geolocation-db.com/json/${GEO_API_KEY}`).then(response => response.json()).then(responseData => {\n        //console.log('11111 -> 1 api call geoloc', responseData);  \n        this.setState({\n          geoLocCity: responseData.city\n        });\n      });\n    };\n\n    this.getWeatherApi = () => {};\n  }\n\n  componentDidMount() {\n    confirmAlert({\n      title: 'Weather App wants to know your location',\n      message: '',\n      buttons: [{\n        label: 'Yes',\n        onClick: this.getUserLocation\n      }, {\n        label: 'No'\n      }]\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.geoLocCity !== this.state.geoLocCity) {\n      // console.log('33333 -> 2 api call geoloc', this.state.geoLocCity);\n      let city = this.state.geoLocCity; //let city = 'Chennai';\n\n      fetch(`http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${city}&cnt=24&appid=${API_KEY}`).then(response => response.json()).then(responseData => {\n        console.log('555555', this.state.geoLocCity);\n        this.setState({\n          weatherUpdate: responseData\n        });\n      });\n    }\n  }\n\n  render() {\n    let activeIndex = new Date().getDay(); //console.log('555555 -> 2 api call weather', this.state.weatherUpdate);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.mainStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.boxStyle,\n        children: [/*#__PURE__*/_jsxDEV(MdLocationOn, {\n          size: \"2em\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          className: \"search\",\n          style: {\n            width: '90%',\n            border: \"none\"\n          },\n          placeholder: 'Search for a location',\n          onChange: e => this.setState({\n            geoLocCity: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaSearch, {\n          size: \"2em\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          marginTop: '4%',\n          //border: \"1px solid black\",\n          flexDirection: 'row',\n          //marginRight: '30%',\n          flexGrow: 1,\n          width: '100%'\n        },\n        children: this.state.weekArr.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(SecondComponent, {\n            keyVal: index,\n            data: item,\n            activeIndex: activeIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherReport, {\n        data: this.state.weekArr[activeIndex],\n        weatherUpdate: this.state.weatherUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst styles = {\n  mainStyle: {\n    display: \"flex\",\n    alignItems: 'center',\n    margin: \"1.6%\",\n    marginLeft: '20%',\n    marginRight: '20%',\n    flexDirection: 'column'\n  },\n  boxStyle: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: 80,\n    borderRadius: 8,\n    padding: '1.6%',\n    justifyContent: 'space-between',\n    boxShadow: \"1px 4px 6px 1px #9E9E9E\",\n    width: '100%'\n  }\n};\nexport default Home;","map":{"version":3,"sources":["/home/anisha/new-test/new-test/src/components/home.jsx"],"names":["React","Component","FaSearch","MdLocationOn","SecondComponent","WeatherReport","confirmAlert","API_KEY","GEO_API_KEY","PlacesAutocomplete","geocodeByAddress","getLatLng","Home","state","weekArr","id","day","maxTemp","minTemp","status","geoLocCity","weatherUpdate","getUserLocation","fetch","then","response","json","responseData","setState","city","getWeatherApi","componentDidMount","title","message","buttons","label","onClick","componentDidUpdate","prevProps","prevState","console","log","render","activeIndex","Date","getDay","styles","mainStyle","boxStyle","width","border","e","target","value","display","marginTop","flexDirection","flexGrow","map","item","index","alignItems","margin","marginLeft","marginRight","height","borderRadius","padding","justifyContent","boxShadow"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport '../App.css';\nimport { FaSearch} from 'react-icons/fa';\nimport { MdLocationOn } from 'react-icons/md';\nimport SecondComponent from './SecondComponent';\nimport WeatherReport from './WeatherReport';\nimport { confirmAlert } from 'react-confirm-alert';\nimport {API_KEY, GEO_API_KEY} from '../constants';\nimport PlacesAutocomplete, {\n    geocodeByAddress,\n    getLatLng,\n  } from 'react-places-autocomplete';\nimport 'react-confirm-alert/src/react-confirm-alert.css'; \n\nclass Home extends Component {\n  state = {\n      weekArr: [\n          {id: 1, day: 'Sun', maxTemp: 28, minTemp: 19, status: 'Sunny'},\n          {id: 2, day: 'Mon', maxTemp: 23, minTemp: 14, status: 'Cloudy'},\n          {id: 3, day: 'Tue', maxTemp: 27, minTemp: 19, status: 'Sunny'},\n          {id: 4, day: 'Wed', maxTemp: 30, minTemp: 26, status: 'Sunny'},\n          {id: 5, day: 'Thu', maxTemp: 22, minTemp: 11, status: 'Sunny'},\n          {id: 6, day: 'Fri', maxTemp: 27, minTemp: 17, status: 'Rainfall'},\n          {id: 7, day: 'Sat', maxTemp: 21, minTemp: 12, status: 'Sunny'}\n      ],\n      geoLocCity: null,\n      weatherUpdate: null,\n  };\n\n  getUserLocation = () => {\n      //console.log('11111 -> 0 api call geoloc');\n      fetch(`https://geolocation-db.com/json/${GEO_API_KEY}`)\n      .then((response) => response.json())\n      .then((responseData) => {\n        //console.log('11111 -> 1 api call geoloc', responseData);  \n        this.setState({\n          \n        geoLocCity: responseData.city\n      })})\n  }\n\n  getWeatherApi = () => {\n    \n  }\n\n  componentDidMount() {\n    confirmAlert({\n        title: 'Weather App wants to know your location',\n        message: '',\n        buttons: [\n          {\n            label: 'Yes',\n            onClick: this.getUserLocation\n          },\n          {\n            label: 'No',\n          }\n        ]\n      });\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.geoLocCity !== this.state.geoLocCity) {\n       // console.log('33333 -> 2 api call geoloc', this.state.geoLocCity);\n        let city = this.state.geoLocCity;\n        //let city = 'Chennai';\n        fetch(`http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${city}&cnt=24&appid=${API_KEY}`)\n        .then((response) => response.json())\n        .then((responseData) => {\n         console.log('555555', this.state.geoLocCity);\n        this.setState({\n            weatherUpdate: responseData\n        })\n    }\n        )\n        }\n  }\n\n  render() {\n      let activeIndex = new Date().getDay();\n      //console.log('555555 -> 2 api call weather', this.state.weatherUpdate);\n    return (\n      <div style={styles.mainStyle}>\n        <div style={styles.boxStyle} > \n        {/* <div style={{\n            flexDirection: 'row',  \n            display: 'flex', \n            //border: \"1px solid black\"\n            }}> */}\n        <MdLocationOn size='2em' />\n            {/* <h3 style={{paddingLeft: '16%', }}>Location</h3> */}\n            <input type='search' \n            className='search' \n            style={{width: '90%', border: \"none\",}}\n            placeholder={'Search for a location'}\n            onChange={(e) => this.setState({\n                geoLocCity: e.target.value\n            })}\n            />\n        {/* </div> */}\n           <FaSearch size='2em'/>\n        </div>\n        <div style={{\n            display: 'flex', \n            marginTop: '4%', \n            //border: \"1px solid black\",\n            flexDirection: 'row', \n            //marginRight: '30%',\n            flexGrow: 1,\n            width: '100%'\n            }}>\n            {\n                this.state.weekArr.map((item, index) => {\n                    return (\n                        <SecondComponent keyVal={index} data={item} activeIndex={activeIndex}/>\n                    );\n                })\n            }\n        </div>\n        <WeatherReport data={this.state.weekArr[activeIndex]}\n        weatherUpdate={this.state.weatherUpdate}\n        />\n\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  mainStyle: {\n    display: \"flex\",\n    alignItems: 'center',\n    margin: \"1.6%\",\n    marginLeft: '20%',\n    marginRight: '20%',\n    flexDirection: 'column'\n  },\n  boxStyle: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: 80,\n    borderRadius: 8,\n    padding: '1.6%',\n    justifyContent: 'space-between',\n    boxShadow: \"1px 4px 6px 1px #9E9E9E\",\n    width: '100%',\n  }\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}