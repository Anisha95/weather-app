{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/anisha/new-test/new-test/src/components/WeatherReport.jsx\";\nimport React, { Component } from 'react';\nimport { imageArr, kelvinToCelcius } from '../constants';\nimport moment from 'moment';\nexport default class WeatherReport extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      averageTemp: null,\n      averagePressure: null,\n      averageHumidity: null\n    };\n\n    this.renderPerson = (item, index) => {\n      let time = item.dt_txt.split(' ')[1].split(':')[0];\n      let meridian = time >= 12 ? 'pm' : 'am';\n      time = time > 12 ? time - 12 : time;\n      let celcius = kelvinToCelcius(item.main.temp);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          paddingRight: '5%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: 30\n          },\n          children: [parseInt(celcius), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [time, \" \", meridian]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let {\n      weatherUpdate\n    } = this.props;\n    let {\n      averagePressure,\n      averageHumidity\n    } = this.state;\n    let pressureCount = 0;\n    let humidityCount = 0;\n\n    if (averagePressure == null && averageHumidity == null || weatherUpdate !== prevProps.weatherUpdate) {\n      weatherUpdate && weatherUpdate.list.map(weather => {\n        humidityCount += weather.main.humidity;\n        pressureCount += weather.main.pressure;\n      });\n      console.log('11111', pressureCount);\n      averagePressure = parseInt(pressureCount / 24);\n      averageHumidity = parseInt(humidityCount / 24);\n      this.setState({\n        averagePressure: averagePressure,\n        averageHumidity: averageHumidity\n      });\n    }\n  }\n\n  render() {\n    const {\n      data,\n      weatherUpdate\n    } = this.props;\n    const {\n      averagePressure,\n      averageHumidity\n    } = this.state;\n    let celcius = weatherUpdate ? parseInt(kelvinToCelcius(weatherUpdate.list[6].main.temp)) : '--';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.mainDiv,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontWeight: 'bold',\n            paddingTop: '1.5%',\n            paddingRight: '2%'\n          },\n          children: [celcius, \"\\xB0 C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageArr[data.status],\n          style: {\n            height: 65,\n            width: 65 //position: 'absolute'\n\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), weatherUpdate ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          overflow: 'scroll'\n        },\n        children: weatherUpdate.list.map((item, index) => this.renderPerson(item, index))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          border: \"1px solid black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            //marginLeft: '16%',\n            backgroundColor: '#f2f2f2',\n            alignItems: 'center',\n            width: '50%',\n            border: \"1px solid black\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Pressure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: averagePressure\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            backgroundColor: '#f2f2f2',\n            //marginRight: '16%',\n            width: '50%',\n            border: \"1px solid black\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Humidity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: averageHumidity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nconst styles = {\n  mainDiv: {\n    marginTop: '4%',\n    border: \"1px solid black\",\n    display: \"flex\",\n    width: '100%',\n    padding: '3%',\n    flexDirection: 'column'\n  }\n};","map":{"version":3,"sources":["/home/anisha/new-test/new-test/src/components/WeatherReport.jsx"],"names":["React","Component","imageArr","kelvinToCelcius","moment","WeatherReport","state","averageTemp","averagePressure","averageHumidity","renderPerson","item","index","time","dt_txt","split","meridian","celcius","main","temp","display","flexDirection","paddingRight","fontSize","parseInt","componentDidUpdate","prevProps","prevState","weatherUpdate","props","pressureCount","humidityCount","list","map","weather","humidity","pressure","console","log","setState","render","data","styles","mainDiv","width","fontWeight","paddingTop","status","height","justifyContent","overflow","border","backgroundColor","alignItems","marginTop","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {imageArr, kelvinToCelcius} from '../constants'\nimport moment from 'moment'\n\nexport default class WeatherReport extends Component {\n    state = {\n        averageTemp:null,\n        averagePressure:null,\n        averageHumidity:null\n    };\n    componentDidUpdate (prevProps, prevState) {\n        let {weatherUpdate} = this.props\n        let {averagePressure, averageHumidity} = this.state;\n        let pressureCount = 0; let humidityCount = 0;\n        if (averagePressure == null && averageHumidity == null || weatherUpdate !== prevProps.weatherUpdate) {\n            weatherUpdate && weatherUpdate.list.map((weather) => {\n                humidityCount += weather.main.humidity\n                pressureCount += weather.main.pressure\n            })\n            console.log('11111', pressureCount)\n            averagePressure = parseInt(pressureCount / 24);\n            averageHumidity =  parseInt(humidityCount / 24);\n            this.setState({\n                averagePressure: averagePressure,\n                averageHumidity: averageHumidity\n            })\n        }\n        \n    }\n\n    renderPerson = (item, index) => {\n       \n        \n        let time = item.dt_txt.split(' ')[1].split(':')[0]\n        let meridian = time >= 12 ? 'pm' : 'am';\n        time  = time > 12 ? time - 12 : time;\n        let celcius = kelvinToCelcius(item.main.temp);\n        return(\n            <div style={{display: 'flex', flexDirection: 'column', paddingRight: '5%', }}>\n            <p style={{fontSize: 30}}>{parseInt(celcius)}&deg;</p>\n            <p>{time} {meridian}</p>\n        </div>\n        );\n       \n    }\n\n\n    render() {\n        const { data, weatherUpdate} = this.props;\n        const {averagePressure, averageHumidity} = this.state;\n        let celcius = weatherUpdate ? parseInt(kelvinToCelcius(weatherUpdate.list[6].main.temp)) : '--';\n        return (\n            <div style={styles.mainDiv}>\n        <div style={{\n            display: 'flex', \n            flexDirection: 'row',\n            width: '50%',\n        }}>\n        <h1 style={{fontWeight: 'bold', paddingTop: '1.5%', paddingRight: '2%'}}>{celcius}&deg; C</h1>\n        <img src={imageArr[data.status]} \n        style={{\n            height: 65, \n            width: 65,\n            //position: 'absolute'\n        }}/>\n        </div>\n        { weatherUpdate ? (\n        <div style={{\n            display: 'flex', \n            flexDirection: 'row', \n            justifyContent: 'space-between',\n            overflow: 'scroll', }}>\n        {/* <FlatList\n          list={weatherUpdate.list}\n          renderItem={(item, index) => this.renderPerson(item, index)}\n          renderWhenEmpty={() => <div>List is empty!</div>}\n        /> */}\n        {weatherUpdate.list.map((item, index) =>  this.renderPerson(item, index))}\n\n        </div>) : null}\n\n        <div style={{\n            display: 'flex', \n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            border: \"1px solid black\", \n            }}> \n            <div style={{\n            display: 'flex', \n            flexDirection: 'column',\n            //marginLeft: '16%',\n            backgroundColor: '#f2f2f2',\n            alignItems: 'center',\n            width: '50%',\n            border: \"1px solid black\", \n            }}>\n              <p>Pressure</p>\n            <p>{averagePressure}</p>\n            </div>\n            <div style={{\n            display: 'flex', \n            flexDirection: 'column',\n            alignItems: 'center',\n            backgroundColor: '#f2f2f2',\n            //marginRight: '16%',\n            width: '50%',\n            border: \"1px solid black\", \n            }}>\n              <p>Humidity</p>\n            <p>{averageHumidity}</p>\n            </div>\n        </div>\n        \n    </div>\n        );\n    }\n}\n\nconst styles = {\n    mainDiv: {\n        marginTop: '4%', \n        border: \"1px solid black\", \n        display: \"flex\",\n        width: '100%',\n        padding: '3%',\n        flexDirection: 'column'\n    }\n}"]},"metadata":{},"sourceType":"module"}