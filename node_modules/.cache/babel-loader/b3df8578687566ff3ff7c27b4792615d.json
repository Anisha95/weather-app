{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/anisha/new-test/new-test/src/components/WeatherReport.jsx\";\nimport React, { Component } from 'react';\nimport { imageArr, kelvinToCelcius } from '../constants';\nimport moment from 'moment';\nexport default class WeatherReport extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      averageTemp: null,\n      averagePressure: null,\n      averageHumidity: null\n    };\n\n    this.renderPerson = (item, index) => {\n      let time = item.dt_txt.split(' ')[1].split(':')[0];\n      let meridian = time >= 12 ? 'pm' : 'am';\n      time = time > 12 ? time - 12 : time;\n      let celcius = kelvinToCelcius(item.main.temp);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          paddingRight: '5%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: 30\n          },\n          children: [parseInt(celcius), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [time, \" \", meridian]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let {\n      weatherUpdate\n    } = this.props;\n    let {\n      averagePressure,\n      averageHumidity,\n      averageTemp\n    } = this.state;\n    let pressureCount = 0;\n    let humidityCount = 0;\n    let degreeCount = 0;\n\n    if (averagePressure == null && averageHumidity == null || weatherUpdate !== prevProps.weatherUpdate) {\n      weatherUpdate && weatherUpdate.list && weatherUpdate.list.map(weather => {\n        humidityCount += weather.main.humidity;\n        pressureCount += weather.main.pressure;\n        degreeCount += kelvinToCelcius(weather.main.temp);\n      });\n      averagePressure = parseInt(pressureCount / 24);\n      averageHumidity = parseInt(humidityCount / 24);\n      averageTemp = parseInt(degreeCount / 24);\n      this.setState({\n        averagePressure: averagePressure,\n        averageHumidity: averageHumidity,\n        averageTemp: averageTemp\n      });\n    }\n  }\n\n  render() {\n    const {\n      data,\n      weatherUpdate\n    } = this.props;\n    const {\n      averagePressure,\n      averageHumidity\n    } = this.state;\n    let sunrise = weatherUpdate && weatherUpdate.city && weatherUpdate.city.sunrise;\n    let sunset = weatherUpdate && weatherUpdate.city && weatherUpdate.city.sunset;\n    sunrise = moment.unix(sunrise).format('h:mm:ss a');\n    sunset = moment.unix(sunset).format('h:mm:ss a');\n    let celcius = weatherUpdate ? this.state.averageTemp : '--';\n\n    if (weatherUpdate && weatherUpdate.cod === '200') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.mainDiv,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            width: '50%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontWeight: 'bold',\n              paddingTop: '2.4%',\n              paddingRight: '2%'\n            },\n            children: [celcius, \"\\xB0 C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageArr[data.status],\n            style: {\n              height: 65,\n              width: 65\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), weatherUpdate && weatherUpdate.list ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.scrollView,\n          children: weatherUpdate.list.map((item, index) => this.renderPerson(item, index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.thirdSubview,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.pressureView,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontWeight: 'bold',\n                fontSize: 24\n              },\n              children: \"Pressure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: 24\n              },\n              children: [averagePressure, \" hpa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.humidityView,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontWeight: 'bold',\n                fontSize: 24\n              },\n              children: \"Humidity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: 24\n              },\n              children: [averageHumidity, \" %\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            marginTop: '2%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.sunriseView,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontWeight: 'bold',\n                fontSize: 24\n              },\n              children: \"Sunrise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: 24\n              },\n              children: sunrise\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.sunsetView,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontWeight: 'bold',\n                fontSize: 24\n              },\n              children: \"Sunset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: 24\n              },\n              children: sunset\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          justifyContent: 'center',\n          marginTop: '15%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Searched place not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\nconst styles = {\n  mainDiv: {\n    marginTop: '4%',\n    //border: \"1px solid black\", \n    display: \"flex\",\n    width: '100%',\n    padding: '3%',\n    boxShadow: \"1px 4px 10px 1px #9E9E9E\",\n    flexDirection: 'column',\n    borderRadius: 10\n  },\n  scrollView: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    overflowX: 'scroll'\n  },\n  thirdSubview: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: '3%',\n    justifyContent: 'space-between'\n  },\n  pressureView: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginRight: '2%',\n    backgroundColor: '#f2f2f2',\n    alignItems: 'center',\n    width: '50%',\n    borderRadius: 4\n  },\n  humidityView: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: '#f2f2f2',\n    marginLeft: '2%',\n    borderRadius: 4,\n    width: '50%'\n  },\n  sunriseView: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginRight: '2%',\n    alignItems: 'flex-start',\n    width: '50%',\n    borderRadius: 4\n  },\n  sunsetView: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n    marginLeft: '2%',\n    borderRadius: 4,\n    width: '50%'\n  }\n};","map":{"version":3,"sources":["/home/anisha/new-test/new-test/src/components/WeatherReport.jsx"],"names":["React","Component","imageArr","kelvinToCelcius","moment","WeatherReport","state","averageTemp","averagePressure","averageHumidity","renderPerson","item","index","time","dt_txt","split","meridian","celcius","main","temp","display","flexDirection","paddingRight","fontSize","parseInt","componentDidUpdate","prevProps","prevState","weatherUpdate","props","pressureCount","humidityCount","degreeCount","list","map","weather","humidity","pressure","setState","render","data","sunrise","city","sunset","unix","format","cod","styles","mainDiv","width","fontWeight","paddingTop","status","height","scrollView","thirdSubview","pressureView","humidityView","marginTop","sunriseView","sunsetView","justifyContent","padding","boxShadow","borderRadius","overflowX","marginRight","backgroundColor","alignItems","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {imageArr, kelvinToCelcius} from '../constants'\nimport moment from 'moment'\n\nexport default class WeatherReport extends Component {\n    state = {\n        averageTemp:null,\n        averagePressure:null,\n        averageHumidity:null\n    };\n    componentDidUpdate (prevProps, prevState) {\n        let {weatherUpdate} = this.props\n        let {averagePressure, averageHumidity, averageTemp} = this.state;\n        let pressureCount = 0; let humidityCount = 0;\n        let degreeCount = 0;\n        if (averagePressure == null && averageHumidity == null || weatherUpdate !== prevProps.weatherUpdate) {\n            weatherUpdate && weatherUpdate.list && weatherUpdate.list.map((weather) => {\n                humidityCount += weather.main.humidity\n                pressureCount += weather.main.pressure\n                degreeCount += kelvinToCelcius(weather.main.temp)\n            })\n            averagePressure = parseInt(pressureCount / 24);\n            averageHumidity =  parseInt(humidityCount / 24);\n            averageTemp =  parseInt(degreeCount / 24);\n            this.setState({\n                averagePressure: averagePressure,\n                averageHumidity: averageHumidity,\n                averageTemp: averageTemp\n            })\n        }\n        \n    }\n\n    renderPerson = (item, index) => {\n        let time = item.dt_txt.split(' ')[1].split(':')[0]\n        let meridian = time >= 12 ? 'pm' : 'am';\n        time  = time > 12 ? time - 12 : time;\n        let celcius = kelvinToCelcius(item.main.temp);\n        return(\n            <div key={index} style={{display: 'flex', flexDirection: 'column', paddingRight: '5%', }}>\n            <p style={{fontSize: 30}}>{parseInt(celcius)}&deg;</p>\n            <p>{time} {meridian}</p>\n        </div>\n        );\n       \n    }\n\n\n    render() {\n        const { data, weatherUpdate} = this.props;\n        const {averagePressure, averageHumidity} = this.state;\n       \n        let sunrise  = weatherUpdate && weatherUpdate.city && weatherUpdate.city.sunrise;\n        let sunset  = weatherUpdate && weatherUpdate.city && weatherUpdate.city.sunset;\n\n        sunrise = moment.unix(sunrise).format('h:mm:ss a');\n        sunset = moment.unix(sunset).format('h:mm:ss a');\n        let celcius = weatherUpdate ? this.state.averageTemp : '--';\n        \n        if (weatherUpdate && weatherUpdate.cod === '200') {\n        return (\n            <div style={styles.mainDiv}>\n        <div style={{\n            display: 'flex', \n            flexDirection: 'row',\n            width: '50%',\n        }}>\n        <h2 style={{fontWeight: 'bold', paddingTop: '2.4%', paddingRight: '2%'}}>{celcius}&deg; C</h2>\n        <img src={imageArr[data.status]} \n        style={{\n            height: 65, \n            width: 65,\n        }}/>\n        </div>\n        { weatherUpdate && weatherUpdate.list ? (\n        <div style={styles.scrollView}>\n        {weatherUpdate.list.map((item, index) =>  this.renderPerson(item, index))}\n\n        </div>) : null}\n\n        <div style={styles.thirdSubview}> \n            <div style={styles.pressureView}>\n              <p style={{fontWeight: 'bold', fontSize: 24}}>Pressure</p>\n            <p style={{fontSize: 24}}>{averagePressure} hpa</p>\n            </div>\n            <div style={styles.humidityView}>\n              <p style={{fontWeight: 'bold', fontSize: 24}}>Humidity</p>\n            <p style={{fontSize: 24}}>{averageHumidity} %</p>\n            </div>\n        </div>\n        \n            <div style={{\n                display: 'flex',\n                flexDirection: 'row',\n                marginTop: '2%'\n            }}>\n                <div style={styles.sunriseView}>\n              <p style={{fontWeight: 'bold', fontSize: 24}}>Sunrise</p>\n            <p style={{fontSize: 24}}>{sunrise}</p>\n            </div> \n            \n            <div style={styles.sunsetView}>\n              <p style={{fontWeight: 'bold', fontSize: 24}}>Sunset</p>\n            <p style={{fontSize: 24}}>{sunset}</p>\n            </div>\n           \n            </div>\n\n    </div>\n        );\n        } else {\n            return (\n                <div style={{justifyContent: 'center', marginTop: '15%'}}>\n                    <h1>Searched place not found</h1>\n                </div>\n            );\n        }\n    }\n}\n\nconst styles = {\n    mainDiv: {\n        marginTop: '4%', \n        //border: \"1px solid black\", \n        display: \"flex\",\n        width: '100%',\n        padding: '3%',\n        boxShadow: \"1px 4px 10px 1px #9E9E9E\",\n        flexDirection: 'column',\n        borderRadius: 10,\n    },\n    scrollView: {\n        display: 'flex', \n        flexDirection: 'row', \n        justifyContent: 'space-between',\n        overflowX : 'scroll', \n    },\n    thirdSubview: {\n        display: 'flex', \n        flexDirection: 'row',\n        marginTop: '3%',\n        justifyContent: 'space-between',\n    },\n    pressureView: {\n        display: 'flex', \n        flexDirection: 'column',\n        marginRight: '2%',\n        backgroundColor: '#f2f2f2',\n        alignItems: 'center',\n        width: '50%',\n        borderRadius: 4,\n    },\n    humidityView: {\n        display: 'flex', \n            flexDirection: 'column',\n            alignItems: 'center',\n            backgroundColor: '#f2f2f2',\n            marginLeft: '2%',\n            borderRadius: 4,\n            width: '50%',\n    },\n    sunriseView: {\n        display: 'flex', \n            flexDirection: 'column',\n            marginRight: '2%',\n            alignItems: 'flex-start',\n            width: '50%',\n            borderRadius: 4,\n    },\n    sunsetView: {\n        display: 'flex', \n        flexDirection: 'column',\n        alignItems: 'flex-end',\n        marginLeft: '2%',\n        borderRadius: 4,\n        width: '50%',\n    }\n}"]},"metadata":{},"sourceType":"module"}