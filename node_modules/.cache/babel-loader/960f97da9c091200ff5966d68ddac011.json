{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/anisha/new-test/new-test/src/components/WeatherReport.jsx\";\nimport React, { Component } from 'react';\nimport { imageArr, kelvinToCelcius } from '../constants';\nimport { ScrollView } from \"@cantonjs/react-scroll-view\";\nimport FlatList from 'flatlist-react';\nexport default class WeatherReport extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      averageTemp: null\n    };\n\n    this.renderPerson = (item, index) => {\n      console.log('11111', item);\n      let celcius = kelvinToCelcius(item.main.temp);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '2%',\n          paddingRight: '5%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [parseInt(celcius), \"\\xB0 C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  componentDidUpdate() {\n    let {\n      weatherUpdate\n    } = this.props;\n  }\n\n  render() {\n    const {\n      data,\n      weatherUpdate\n    } = this.props; //console.log('11111', data)\n\n    let celcius = weatherUpdate ? parseInt(kelvinToCelcius(weatherUpdate.list[6].main.temp)) : '--';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.mainDiv,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: [celcius, \"\\xB0 C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageArr[data.status],\n          style: {\n            height: 65,\n            width: 65,\n            left: '28%',\n            bottom: '52%',\n            position: 'absolute'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), weatherUpdate ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          overflow: 'scroll'\n        },\n        children: weatherUpdate.list.map((item, index) => this.renderPerson(item, index))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nconst styles = {\n  mainDiv: {\n    marginTop: '4%',\n    border: \"1px solid black\",\n    display: \"flex\",\n    width: '100%',\n    padding: '3%',\n    flexDirection: 'column'\n  }\n};","map":{"version":3,"sources":["/home/anisha/new-test/new-test/src/components/WeatherReport.jsx"],"names":["React","Component","imageArr","kelvinToCelcius","ScrollView","FlatList","WeatherReport","state","averageTemp","renderPerson","item","index","console","log","celcius","main","temp","margin","paddingRight","parseInt","componentDidUpdate","weatherUpdate","props","render","data","list","styles","mainDiv","display","flexDirection","width","fontWeight","status","height","left","bottom","position","overflow","map","marginTop","border","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {imageArr, kelvinToCelcius} from '../constants'\nimport { ScrollView } from \"@cantonjs/react-scroll-view\";\nimport FlatList from 'flatlist-react';\n\nexport default class WeatherReport extends Component {\n    state = {\n        averageTemp:null\n    };\n    componentDidUpdate () {\n        let {weatherUpdate} = this.props\n        \n    }\n\n    renderPerson = (item, index) => {\n        console.log('11111', item)\n\n        let celcius = kelvinToCelcius(item.main.temp);\n        return(\n            <div style={{margin: '2%', paddingRight: '5%'}}>\n            <p>{parseInt(celcius)}&deg; C</p>\n        </div>\n        );\n       \n    }\n\n\n    render() {\n        const { data, weatherUpdate} = this.props;\n        //console.log('11111', data)\n        let celcius = weatherUpdate ? parseInt(kelvinToCelcius(weatherUpdate.list[6].main.temp)) : '--';\n        return (\n            <div style={styles.mainDiv}>\n        <div style={{\n            display: 'flex', \n            flexDirection: 'row',\n            width: '50%',\n        }}>\n        <h1 style={{fontWeight: 'bold'}}>{celcius}&deg; C</h1>\n        <img src={imageArr[data.status]} \n        style={{\n            height: 65, \n            width: 65,\n            left: '28%',\n            bottom: '52%',\n            position: 'absolute'\n        }}/>\n        </div>\n        { weatherUpdate ? (\n        <div style={{display: 'flex', flexDirection: 'row', overflow: 'scroll', }}>\n        {/* <FlatList\n          list={weatherUpdate.list}\n          renderItem={(item, index) => this.renderPerson(item, index)}\n          renderWhenEmpty={() => <div>List is empty!</div>}\n        /> */}\n        {weatherUpdate.list.map((item, index) =>  this.renderPerson(item, index))}\n\n        </div>) : null}\n        \n    </div>\n        );\n    }\n}\n\nconst styles = {\n    mainDiv: {\n        marginTop: '4%', \n        border: \"1px solid black\", \n        display: \"flex\",\n        width: '100%',\n        padding: '3%',\n        flexDirection: 'column'\n    }\n}"]},"metadata":{},"sourceType":"module"}