{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/anisha/new-test/new-test/src/components/home.jsx\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { MdLocationOn } from \"react-icons/md\";\nimport SecondComponent from \"./SecondComponent\";\nimport WeatherReport from \"./WeatherReport\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { API_KEY, GEO_API_KEY } from \"../constants\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weekArr: [{\n        id: 1,\n        day: \"Sun\",\n        maxTemp: 28,\n        minTemp: 19,\n        status: \"Sunny\"\n      }, {\n        id: 2,\n        day: \"Mon\",\n        maxTemp: 23,\n        minTemp: 14,\n        status: \"Cloudy\"\n      }, {\n        id: 3,\n        day: \"Tue\",\n        maxTemp: 27,\n        minTemp: 19,\n        status: \"Sunny\"\n      }, {\n        id: 4,\n        day: \"Wed\",\n        maxTemp: 30,\n        minTemp: 26,\n        status: \"Sunny\"\n      }, {\n        id: 5,\n        day: \"Thu\",\n        maxTemp: 22,\n        minTemp: 11,\n        status: \"Sunny\"\n      }, {\n        id: 6,\n        day: \"Fri\",\n        maxTemp: 27,\n        minTemp: 17,\n        status: \"Rainfall\"\n      }, {\n        id: 7,\n        day: \"Sat\",\n        maxTemp: 21,\n        minTemp: 12,\n        status: \"Sunny\"\n      }],\n      geoLocCity: null,\n      weatherUpdate: null,\n      maxTemp: null,\n      minTemp: null\n    };\n\n    this.getUserLocation = () => {\n      fetch(`https://geolocation-db.com/json/${GEO_API_KEY}`).then(response => response.json()).then(responseData => {\n        this.setState({\n          geoLocCity: responseData.city\n        });\n      });\n    };\n\n    this.getWeatherUpdate = (maxTemp, minTemp) => {\n      this.setState({});\n    };\n  }\n\n  componentDidMount() {\n    confirmAlert({\n      title: \"Weather App wants to know your location\",\n      message: \"\",\n      buttons: [{\n        label: \"Yes\",\n        onClick: this.getUserLocation\n      }, {\n        label: \"No\"\n      }]\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.geoLocCity !== this.state.geoLocCity) {\n      let city = this.state.geoLocCity; //let city = 'Chennai';\n\n      fetch(`http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${city}&cnt=24&appid=${API_KEY}`).then(response => response.json()).then(responseData => {\n        this.setState({\n          weatherUpdate: responseData\n        });\n      });\n    }\n  }\n\n  render() {\n    let activeIndex = new Date().getDay();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.mainStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.boxStyle,\n        children: [/*#__PURE__*/_jsxDEV(MdLocationOn, {\n          size: \"2em\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          className: \"search\",\n          style: {\n            width: \"90%\",\n            border: \"none\"\n          },\n          placeholder: \"Search for a location\",\n          onChange: e => this.setState({\n            geoLocCity: e.target.value.trim()\n          }),\n          value: this.state.geoLocCity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FaSearch, {\n          size: \"2em\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.secondDiv,\n        children: this.state.weekArr.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(SecondComponent, {\n            keyVal: index,\n            data: item,\n            activeIndex: activeIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherReport, {\n        data: this.state.weekArr[activeIndex],\n        weatherUpdate: this.state.weatherUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst styles = {\n  mainStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"1.6%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    flexDirection: \"column\"\n  },\n  boxStyle: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: 80,\n    borderRadius: 8,\n    padding: \"1.6%\",\n    justifyContent: \"space-between\",\n    boxShadow: \"1px 4px 6px 1px #9E9E9E\",\n    width: \"100%\"\n  },\n  secondDiv: {\n    display: \"flex\",\n    marginTop: \"4%\",\n    flexDirection: \"row\",\n    flexGrow: 1,\n    width: \"100%\"\n  }\n};\nexport default Home;","map":{"version":3,"sources":["/home/anisha/new-test/new-test/src/components/home.jsx"],"names":["React","Component","FaSearch","MdLocationOn","SecondComponent","WeatherReport","confirmAlert","API_KEY","GEO_API_KEY","Home","state","weekArr","id","day","maxTemp","minTemp","status","geoLocCity","weatherUpdate","getUserLocation","fetch","then","response","json","responseData","setState","city","getWeatherUpdate","componentDidMount","title","message","buttons","label","onClick","componentDidUpdate","prevProps","prevState","render","activeIndex","Date","getDay","styles","mainStyle","boxStyle","width","border","e","target","value","trim","secondDiv","map","item","index","display","alignItems","margin","marginLeft","marginRight","flexDirection","height","borderRadius","padding","justifyContent","boxShadow","marginTop","flexGrow"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { MdLocationOn } from \"react-icons/md\";\nimport SecondComponent from \"./SecondComponent\";\nimport WeatherReport from \"./WeatherReport\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { API_KEY, GEO_API_KEY } from \"../constants\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nclass Home extends Component {\n  state = {\n    weekArr: [\n      { id: 1, day: \"Sun\", maxTemp: 28, minTemp: 19, status: \"Sunny\" },\n      { id: 2, day: \"Mon\", maxTemp: 23, minTemp: 14, status: \"Cloudy\" },\n      { id: 3, day: \"Tue\", maxTemp: 27, minTemp: 19, status: \"Sunny\" },\n      { id: 4, day: \"Wed\", maxTemp: 30, minTemp: 26, status: \"Sunny\" },\n      { id: 5, day: \"Thu\", maxTemp: 22, minTemp: 11, status: \"Sunny\" },\n      { id: 6, day: \"Fri\", maxTemp: 27, minTemp: 17, status: \"Rainfall\" },\n      { id: 7, day: \"Sat\", maxTemp: 21, minTemp: 12, status: \"Sunny\" }\n    ],\n    geoLocCity: null,\n    weatherUpdate: null,\n    maxTemp: null,\n    minTemp: null,\n  };\n\n  getUserLocation = () => {\n    fetch(`https://geolocation-db.com/json/${GEO_API_KEY}`)\n      .then(response => response.json())\n      .then(responseData => {\n        this.setState({\n          geoLocCity: responseData.city\n        });\n      });\n  };\n  \n\n  getWeatherUpdate = (maxTemp, minTemp) => {\n    this.setState({\n\n    })\n  };\n\n  componentDidMount() {\n    confirmAlert({\n      title: \"Weather App wants to know your location\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: this.getUserLocation\n        },\n        {\n          label: \"No\"\n        }\n      ]\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.geoLocCity !== this.state.geoLocCity) {\n      let city = this.state.geoLocCity;\n      //let city = 'Chennai';\n      fetch(\n        `http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${city}&cnt=24&appid=${API_KEY}`\n      )\n        .then(response => response.json())\n        .then(responseData => {\n          this.setState({\n            weatherUpdate: responseData\n          });\n        });\n    }\n  }\n\n  render() {\n    let activeIndex = new Date().getDay();\n    return (\n      <div style={styles.mainStyle}>\n        <div style={styles.boxStyle}>\n          <MdLocationOn size=\"2em\" />\n          <input\n            type=\"search\"\n            className=\"search\"\n            style={{ width: \"90%\", border: \"none\" }}\n            placeholder={\"Search for a location\"}\n            onChange={e =>\n              this.setState({\n                geoLocCity: e.target.value.trim()\n              })\n            }\n            value={this.state.geoLocCity}\n          />\n          {/* </div> */}\n          <FaSearch size=\"2em\" />\n        </div>\n        <div style={styles.secondDiv}>\n          {this.state.weekArr.map((item, index) => {\n            return (\n              <SecondComponent\n                keyVal={index}\n                data={item}\n                activeIndex={activeIndex}\n              />\n            );\n          })}\n        </div>\n        <WeatherReport\n          data={this.state.weekArr[activeIndex]}\n          weatherUpdate={this.state.weatherUpdate}\n        />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  mainStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"1.6%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    flexDirection: \"column\"\n  },\n  boxStyle: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: 80,\n    borderRadius: 8,\n    padding: \"1.6%\",\n    justifyContent: \"space-between\",\n    boxShadow: \"1px 4px 6px 1px #9E9E9E\",\n    width: \"100%\"\n  },\n  secondDiv: {\n    display: \"flex\",\n    marginTop: \"4%\",\n    flexDirection: \"row\",\n    flexGrow: 1,\n    width: \"100%\"\n  }\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}