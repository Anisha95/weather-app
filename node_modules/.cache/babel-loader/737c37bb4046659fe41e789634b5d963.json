{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/user/weather-app/src/components/WeatherReport.jsx\";\nimport React, { Component } from 'react';\nimport { imageArr, kelvinToCelcius } from '../constants';\nimport moment from 'moment';\nimport sunStatus from '../images/sunStatus.png';\nexport default class WeatherReport extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      averageTemp: null,\n      averagePressure: null,\n      averageHumidity: null\n    };\n\n    this.componentDidMount = () => {};\n\n    this.renderPerson = (item, index) => {\n      let time = item.dt_txt.split(' ')[1].split(':')[0];\n      let meridian = time >= 12 ? 'pm' : 'am';\n      time = time > 12 ? time - 12 : time;\n      let celcius = kelvinToCelcius(item.main.temp);\n      let bottomVal = parseInt(120 + celcius * 1.5);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          paddingRight: '5%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            borderLeft: '1px solid black',\n            height: '160px',\n            borderColor: '#DCDCDC',\n            paddingRight: 23\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: '2px solid blue',\n            borderRadius: '50%',\n            width: '8px',\n            height: '8px',\n            marginRight: 40,\n            position: 'sticky',\n            bottom: bottomVal,\n            zIndex: 9,\n            display: 'inline-block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: 30\n          },\n          children: [parseInt(celcius), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [time, \" \", meridian]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let {\n      weatherUpdate,\n      getWeatherUpdate\n    } = this.props;\n    let {\n      averagePressure,\n      averageHumidity,\n      averageTemp\n    } = this.state;\n    let pressureCount = 0;\n    let humidityCount = 0;\n    let degreeCount = 0;\n\n    if (averagePressure == null && averageHumidity == null || weatherUpdate !== prevProps.weatherUpdate) {\n      let half_length = weatherUpdate && weatherUpdate.list && Math.ceil(weatherUpdate.list.length / 2);\n\n      if (weatherUpdate && weatherUpdate.cnt > 24) {\n        weatherUpdate && weatherUpdate.list && weatherUpdate.list.splice(1, half_length);\n      }\n\n      weatherUpdate && weatherUpdate.list && weatherUpdate.list.map(weather => {\n        humidityCount += weather.main.humidity;\n        pressureCount += weather.main.pressure;\n        degreeCount += kelvinToCelcius(weather.main.temp);\n      });\n      averagePressure = parseInt(pressureCount / 24);\n      averageHumidity = parseInt(humidityCount / 24);\n      averageTemp = parseInt(degreeCount / 24);\n      this.setState({\n        averagePressure: averagePressure,\n        averageHumidity: averageHumidity,\n        averageTemp: averageTemp\n      });\n      if (averageTemp) getWeatherUpdate(averageTemp + 6, averageTemp - 5);\n    }\n  }\n\n  render() {\n    const {\n      data,\n      weatherUpdate\n    } = this.props;\n    const {\n      averagePressure,\n      averageHumidity,\n      averageTemp\n    } = this.state;\n    let sunrise = weatherUpdate && weatherUpdate.city && weatherUpdate.city.sunrise;\n    let sunset = weatherUpdate && weatherUpdate.city && weatherUpdate.city.sunset;\n    sunrise = moment.unix(sunrise).format('h:mm:ss a');\n    sunset = moment.unix(sunset).format('h:mm:ss a');\n    let nowTime = moment(new Date()).format('H:mm:ss');\n    nowTime = parseInt(nowTime.split(':')[0]); //let nowTime = moment.utc(new Date()).format('h:mm:ss a');\n\n    let celcius = weatherUpdate && averageTemp ? averageTemp : '23';\n\n    if (weatherUpdate && weatherUpdate.cod === '200') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.mainDiv,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            width: '50%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontWeight: 'bold',\n              paddingTop: '2.4%',\n              paddingRight: '2%'\n            },\n            children: [celcius, \"\\xB0 C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageArr[data.status],\n            style: {\n              height: 65,\n              width: 65\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this), weatherUpdate && weatherUpdate.list ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.scrollView,\n          children: weatherUpdate.list.map((item, index) => this.renderPerson(item, index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.thirdSubview,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.pressureView,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontWeight: 'bold',\n                fontSize: 24\n              },\n              children: \"Pressure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: 24\n              },\n              children: [averagePressure, \" hpa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.humidityView,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontWeight: 'bold',\n                fontSize: 24\n              },\n              children: \"Humidity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: 24\n              },\n              children: [averageHumidity, \" %\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            marginTop: '2%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.sunriseView,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontWeight: 'bold',\n                fontSize: 24\n              },\n              children: \"Sunrise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: 24\n              },\n              children: sunrise\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.sunsetView,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontWeight: 'bold',\n                fontSize: 24\n              },\n              children: \"Sunset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: 24\n              },\n              children: sunset\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: sunStatus,\n          style: {\n            height: 145,\n            width: 905,\n            alignSelf: 'center'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: 'https://cdn4.iconfinder.com/data/icons/the-weather-is-nice-today/64/weather_3-512.png',\n          style: {\n            height: 65,\n            width: 65,\n            position: 'absolute',\n            top: '103%',\n            left: 550 + 8 * 40\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          justifyContent: 'center',\n          marginTop: '15%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Searched place not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\nconst styles = {\n  mainDiv: {\n    marginTop: '4%',\n    //border: \"1px solid black\", \n    display: \"flex\",\n    width: '100%',\n    padding: '3%',\n    boxShadow: \"1px 4px 10px 1px #9E9E9E\",\n    flexDirection: 'column',\n    borderRadius: 10\n  },\n  scrollView: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    overflowX: 'auto',\n    marginTop: '5%'\n  },\n  thirdSubview: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: '3%',\n    justifyContent: 'space-between'\n  },\n  pressureView: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginRight: '2%',\n    backgroundColor: '#f2f2f2',\n    alignItems: 'center',\n    width: '50%',\n    borderRadius: 4\n  },\n  humidityView: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: '#f2f2f2',\n    marginLeft: '2%',\n    borderRadius: 4,\n    width: '50%'\n  },\n  sunriseView: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginRight: '2%',\n    alignItems: 'flex-start',\n    width: '50%',\n    borderRadius: 4\n  },\n  sunsetView: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n    marginLeft: '2%',\n    borderRadius: 4,\n    width: '50%'\n  }\n};","map":{"version":3,"sources":["/home/user/weather-app/src/components/WeatherReport.jsx"],"names":["React","Component","imageArr","kelvinToCelcius","moment","sunStatus","WeatherReport","state","averageTemp","averagePressure","averageHumidity","componentDidMount","renderPerson","item","index","time","dt_txt","split","meridian","celcius","main","temp","bottomVal","parseInt","display","flexDirection","paddingRight","borderLeft","height","borderColor","border","borderRadius","width","marginRight","position","bottom","zIndex","fontSize","componentDidUpdate","prevProps","prevState","weatherUpdate","getWeatherUpdate","props","pressureCount","humidityCount","degreeCount","half_length","list","Math","ceil","length","cnt","splice","map","weather","humidity","pressure","setState","render","data","sunrise","city","sunset","unix","format","nowTime","Date","cod","styles","mainDiv","fontWeight","paddingTop","status","scrollView","thirdSubview","pressureView","humidityView","marginTop","sunriseView","sunsetView","alignSelf","top","left","justifyContent","padding","boxShadow","overflowX","backgroundColor","alignItems","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {imageArr, kelvinToCelcius} from '../constants'\nimport moment from 'moment'\nimport sunStatus from '../images/sunStatus.png';\n\nexport default class WeatherReport extends Component {\n    state = {\n        averageTemp:null,\n        averagePressure:null,\n        averageHumidity:null\n    };\n\n\n    componentDidMount = () => {\n        \n    }\n\n    componentDidUpdate (prevProps, prevState) {\n        let {weatherUpdate, getWeatherUpdate} = this.props\n        let {averagePressure, averageHumidity, averageTemp} = this.state;\n        let pressureCount = 0; let humidityCount = 0;\n        let degreeCount = 0;\n\n      \n\n        if (averagePressure == null && averageHumidity == null || weatherUpdate !== prevProps.weatherUpdate) {\n          \n            let half_length = weatherUpdate && weatherUpdate.list && Math.ceil(weatherUpdate.list.length / 2);    \n\n            if (weatherUpdate && weatherUpdate.cnt > 24) {\n                weatherUpdate && weatherUpdate.list && weatherUpdate.list.splice(1,half_length);\n            }\n\n            weatherUpdate && weatherUpdate.list && weatherUpdate.list.map((weather) => {\n                humidityCount += weather.main.humidity\n                pressureCount += weather.main.pressure\n                degreeCount += kelvinToCelcius(weather.main.temp)\n            })\n            averagePressure = parseInt(pressureCount / 24);\n            averageHumidity =  parseInt(humidityCount / 24);\n            averageTemp =  parseInt(degreeCount / 24);\n            this.setState({\n                averagePressure: averagePressure,\n                averageHumidity: averageHumidity,\n                averageTemp: averageTemp\n            })\n            if (averageTemp)\n                getWeatherUpdate(averageTemp + 6, averageTemp - 5);\n        }\n        \n    }\n\n    renderPerson = (item, index) => {\n        let time = item.dt_txt.split(' ')[1].split(':')[0]\n        let meridian = time >= 12 ? 'pm' : 'am';\n        time  = time > 12 ? time - 12 : time;\n        let celcius = kelvinToCelcius(item.main.temp);\n        let bottomVal = parseInt(120 + celcius* 1.5);\n\n        return(\n            <div key={index} style={{display: 'flex',\n            flexDirection: 'column', paddingRight: '5%', }}>\n            <div \n            style={{\n                borderLeft: '1px solid black',\n                height: '160px',\n                borderColor: '#DCDCDC',\n                paddingRight: 23,\n            }}\n            \n            />\n            <div\n            style={{\n                border: '2px solid blue',\n                borderRadius: '50%',\n                width: '8px',\n                height: '8px',\n                marginRight: 40,\n                position: 'sticky',\n                bottom: bottomVal,\n                zIndex: 9,\n                display: 'inline-block'\n            }}\n            />\n            <p style={{fontSize: 30}}>{parseInt(celcius)}&deg;</p>\n            <p>{time} {meridian}</p>\n        </div>\n        );\n       \n    }\n\n\n    render() {\n        const { data, weatherUpdate} = this.props;\n        const {averagePressure, averageHumidity, averageTemp} = this.state;\n       \n        let sunrise  = weatherUpdate && weatherUpdate.city && weatherUpdate.city.sunrise;\n        let sunset  = weatherUpdate && weatherUpdate.city && weatherUpdate.city.sunset;\n\n        sunrise = moment.unix(sunrise).format('h:mm:ss a');\n        sunset = moment.unix(sunset).format('h:mm:ss a');\n        let nowTime = moment(new Date()).format('H:mm:ss');\n        nowTime = parseInt(nowTime.split(':')[0]);\n        //let nowTime = moment.utc(new Date()).format('h:mm:ss a');\n        let celcius = weatherUpdate  && averageTemp ? averageTemp : '23';\n        \n        if (weatherUpdate && weatherUpdate.cod === '200') {\n        return (\n            <div style={styles.mainDiv}>\n        <div style={{\n            display: 'flex', \n            flexDirection: 'row',\n            width: '50%',\n        }}>\n        <h2 style={{fontWeight: 'bold', paddingTop: '2.4%', paddingRight: '2%'}}>{celcius}&deg; C</h2>\n        <img src={imageArr[data.status]} \n        style={{\n            height: 65, \n            width: 65,\n        }}/>\n        </div>\n        { weatherUpdate && weatherUpdate.list ? (\n        <div style={styles.scrollView}>\n        {weatherUpdate.list.map((item, index) =>  this.renderPerson(item, index))}\n\n        </div>) : null}\n\n        <div style={styles.thirdSubview}> \n            <div style={styles.pressureView}>\n              <p style={{fontWeight: 'bold', fontSize: 24}}>Pressure</p>\n            <p style={{fontSize: 24}}>{averagePressure} hpa</p>\n            </div>\n            <div style={styles.humidityView}>\n              <p style={{fontWeight: 'bold', fontSize: 24}}>Humidity</p>\n            <p style={{fontSize: 24}}>{averageHumidity} %</p>\n            </div>\n        </div>\n        \n            <div style={{\n                display: 'flex',\n                flexDirection: 'row',\n                marginTop: '2%'\n            }}>\n                <div style={styles.sunriseView}>\n              <p style={{fontWeight: 'bold', fontSize: 24}}>Sunrise</p>\n            <p style={{fontSize: 24}}>{sunrise}</p>\n            </div> \n            \n            <div style={styles.sunsetView}>\n              <p style={{fontWeight: 'bold', fontSize: 24}}>Sunset</p>\n            <p style={{fontSize: 24}}>{sunset}</p>\n            </div>\n\n          \n           \n            </div>\n\n            <img src={sunStatus} \n        style={{\n            height: 145, \n            width: 905,\n            alignSelf: 'center',\n        }}/>\n\n        <img src={'https://cdn4.iconfinder.com/data/icons/the-weather-is-nice-today/64/weather_3-512.png'} \n                style={{\n                    height: 65, \n                    width: 65,\n                    position: 'absolute',\n                    top: '103%',\n                    left: 550 + (8 * 40)\n                }}/>\n\n    </div>\n        );\n        } else {\n            return (\n                <div style={{justifyContent: 'center', marginTop: '15%'}}>\n                    <h1>Searched place not found</h1>\n                </div>\n            );\n        }\n    }\n}\n\nconst styles = {\n    mainDiv: {\n        marginTop: '4%', \n        //border: \"1px solid black\", \n        display: \"flex\",\n        width: '100%',\n        padding: '3%',\n        boxShadow: \"1px 4px 10px 1px #9E9E9E\",\n        flexDirection: 'column',\n        borderRadius: 10,\n    },\n    scrollView: {\n        display: 'flex', \n        flexDirection: 'row', \n        justifyContent: 'space-between',\n        overflowX : 'auto', \n        marginTop: '5%',\n    },\n    thirdSubview: {\n        display: 'flex', \n        flexDirection: 'row',\n        marginTop: '3%',\n        justifyContent: 'space-between',\n    },\n    pressureView: {\n        display: 'flex', \n        flexDirection: 'column',\n        marginRight: '2%',\n        backgroundColor: '#f2f2f2',\n        alignItems: 'center',\n        width: '50%',\n        borderRadius: 4,\n    },\n    humidityView: {\n        display: 'flex', \n            flexDirection: 'column',\n            alignItems: 'center',\n            backgroundColor: '#f2f2f2',\n            marginLeft: '2%',\n            borderRadius: 4,\n            width: '50%',\n    },\n    sunriseView: {\n        display: 'flex', \n            flexDirection: 'column',\n            marginRight: '2%',\n            alignItems: 'flex-start',\n            width: '50%',\n            borderRadius: 4,\n    },\n    sunsetView: {\n        display: 'flex', \n        flexDirection: 'column',\n        alignItems: 'flex-end',\n        marginLeft: '2%',\n        borderRadius: 4,\n        width: '50%',\n    }\n}"]},"metadata":{},"sourceType":"module"}