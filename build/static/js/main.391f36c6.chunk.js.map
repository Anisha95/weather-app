{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","constants/index.js","components/SecondComponent.jsx","components/WeatherReport.jsx","components/home.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","imageArr","GEO_API_KEY","kelvinToCelcius","kelvin","SecondComponent","state","isActiveDay","this","props","data","keyVal","activeIndex","style","display","flexDirection","flex","border","borderColor","marginLeft","marginRight","marginTop","fontWeight","fontSize","day","maxTemp","minTemp","src","status","height","width","marginBottom","Component","WeatherReport","averageTemp","averagePressure","averageHumidity","renderPerson","item","index","time","dt_txt","split","meridian","celcius","main","temp","paddingRight","parseInt","prevProps","prevState","weatherUpdate","getWeatherUpdate","pressureCount","humidityCount","degreeCount","list","map","weather","humidity","pressure","setState","sunrise","city","sunset","moment","unix","format","cod","styles","mainDiv","paddingTop","scrollView","thirdSubview","pressureView","humidityView","sunriseView","sunsetView","justifyContent","padding","boxShadow","borderRadius","overflowX","backgroundColor","alignItems","Home","weekArr","id","geoLocCity","getUserLocation","fetch","response","json","responseData","Date","getDay","confirmAlert","title","message","buttons","label","onClick","mainStyle","boxStyle","size","type","className","placeholder","onChange","e","target","value","secondDiv","margin","flexGrow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.391f36c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const imageArr = {\n    'Sunny': 'https://cdn4.iconfinder.com/data/icons/the-weather-is-nice-today/64/weather_3-512.png',\n    'Cloudy': 'https://img2.pngio.com/download-free-png-partly-cloudy-the-weather-w-dlpngcom-partly-cloudy-png-492_440.png',\n    'Rainfall': 'https://png.pngtree.com/png-vector/20191002/ourlarge/pngtree-cloud-with-rain-drops-icon-cartoon-style-png-image_1784624.jpg'\n}\n\nexport const API_KEY = 'b1b15e88fa797225412429c1c50c122a1';\nexport const GEO_API_KEY = '7733a990-ebd4-11ea-b9a6-2955706ddbf3';\n\nexport const kelvinToCelcius = (kelvin) => {\n    return kelvin - 273.15\n}\n","import React, { Component } from 'react';\nimport '../App.css';\nimport {imageArr} from '../constants'\n\nexport default class SecondComponent extends Component {\n    state = { \n        isActiveDay: false\n     }\n\n    render() {\n        const {data, keyVal, activeIndex} = this.props;\n        return ( \n            <div\n            key={keyVal} \n            style={{\n                display: 'flex',\n                flexDirection: 'column',\n                flex: 1,\n                border: activeIndex === keyVal ? \"2px solid black\" : \"none\",\n                borderColor: '#00bfff'\n            }\n        }\n            >\n                <ul key={keyVal} style={{marginLeft: '15%', marginRight: '2%',  marginTop: '4%'}}>\n                        <p style={{fontWeight: 'bold', fontSize: '20px'}}>{data.day}</p>\n                        <div style={{display: 'flex', flexDirection: 'row',}}>\n                            <p style={{marginRight: '5%', fontWeight: 'bold'}}>{data.maxTemp}&deg;</p>\n                            <p>{data.minTemp}&deg;</p>\n                        </div>\n                        <img src={imageArr[data.status]} style={{\n                                height: 40, \n                                width: 40,\n                                marginBottom: '3%'\n                            }}/>\n                        <p>{data.status}</p>\n                </ul>\n                 </div>\n         );\n    }\n}\n","import React, { Component } from 'react';\nimport {imageArr, kelvinToCelcius} from '../constants'\nimport moment from 'moment'\n\nexport default class WeatherReport extends Component {\n    state = {\n        averageTemp:null,\n        averagePressure:null,\n        averageHumidity:null\n    };\n    componentDidUpdate (prevProps, prevState) {\n        let {weatherUpdate, getWeatherUpdate} = this.props\n        let {averagePressure, averageHumidity, averageTemp} = this.state;\n        let pressureCount = 0; let humidityCount = 0;\n        let degreeCount = 0;\n        if (averagePressure == null && averageHumidity == null || weatherUpdate !== prevProps.weatherUpdate) {\n            weatherUpdate && weatherUpdate.list && weatherUpdate.list.map((weather) => {\n                humidityCount += weather.main.humidity\n                pressureCount += weather.main.pressure\n                degreeCount += kelvinToCelcius(weather.main.temp)\n            })\n            averagePressure = parseInt(pressureCount / 24);\n            averageHumidity =  parseInt(humidityCount / 24);\n            averageTemp =  parseInt(degreeCount / 24);\n            this.setState({\n                averagePressure: averagePressure,\n                averageHumidity: averageHumidity,\n                averageTemp: averageTemp\n            })\n            if (averageTemp)\n                getWeatherUpdate(averageTemp + 6, averageTemp - 5);\n        }\n        \n    }\n\n    renderPerson = (item, index) => {\n        let time = item.dt_txt.split(' ')[1].split(':')[0]\n        let meridian = time >= 12 ? 'pm' : 'am';\n        time  = time > 12 ? time - 12 : time;\n        let celcius = kelvinToCelcius(item.main.temp);\n        return(\n            <div key={index} style={{display: 'flex', flexDirection: 'column', paddingRight: '5%', }}>\n            <p style={{fontSize: 30}}>{parseInt(celcius)}&deg;</p>\n            <p>{time} {meridian}</p>\n        </div>\n        );\n       \n    }\n\n\n    render() {\n        const { data, weatherUpdate} = this.props;\n        const {averagePressure, averageHumidity, averageTemp} = this.state;\n       \n        let sunrise  = weatherUpdate && weatherUpdate.city && weatherUpdate.city.sunrise;\n        let sunset  = weatherUpdate && weatherUpdate.city && weatherUpdate.city.sunset;\n\n        sunrise = moment.unix(sunrise).format('h:mm:ss a');\n        sunset = moment.unix(sunset).format('h:mm:ss a');\n        let celcius = weatherUpdate  && averageTemp ? averageTemp : '23';\n        \n        if (weatherUpdate && weatherUpdate.cod === '200') {\n        return (\n            <div style={styles.mainDiv}>\n        <div style={{\n            display: 'flex', \n            flexDirection: 'row',\n            width: '50%',\n        }}>\n        <h2 style={{fontWeight: 'bold', paddingTop: '2.4%', paddingRight: '2%'}}>{celcius}&deg; C</h2>\n        <img src={imageArr[data.status]} \n        style={{\n            height: 65, \n            width: 65,\n        }}/>\n        </div>\n        { weatherUpdate && weatherUpdate.list ? (\n        <div style={styles.scrollView}>\n        {weatherUpdate.list.map((item, index) =>  this.renderPerson(item, index))}\n\n        </div>) : null}\n\n        <div style={styles.thirdSubview}> \n            <div style={styles.pressureView}>\n              <p style={{fontWeight: 'bold', fontSize: 24}}>Pressure</p>\n            <p style={{fontSize: 24}}>{averagePressure} hpa</p>\n            </div>\n            <div style={styles.humidityView}>\n              <p style={{fontWeight: 'bold', fontSize: 24}}>Humidity</p>\n            <p style={{fontSize: 24}}>{averageHumidity} %</p>\n            </div>\n        </div>\n        \n            <div style={{\n                display: 'flex',\n                flexDirection: 'row',\n                marginTop: '2%'\n            }}>\n                <div style={styles.sunriseView}>\n              <p style={{fontWeight: 'bold', fontSize: 24}}>Sunrise</p>\n            <p style={{fontSize: 24}}>{sunrise}</p>\n            </div> \n            \n            <div style={styles.sunsetView}>\n              <p style={{fontWeight: 'bold', fontSize: 24}}>Sunset</p>\n            <p style={{fontSize: 24}}>{sunset}</p>\n            </div>\n           \n            </div>\n\n    </div>\n        );\n        } else {\n            return (\n                <div style={{justifyContent: 'center', marginTop: '15%'}}>\n                    <h1>Searched place not found</h1>\n                </div>\n            );\n        }\n    }\n}\n\nconst styles = {\n    mainDiv: {\n        marginTop: '4%', \n        //border: \"1px solid black\", \n        display: \"flex\",\n        width: '100%',\n        padding: '3%',\n        boxShadow: \"1px 4px 10px 1px #9E9E9E\",\n        flexDirection: 'column',\n        borderRadius: 10,\n    },\n    scrollView: {\n        display: 'flex', \n        flexDirection: 'row', \n        justifyContent: 'space-between',\n        overflowX : 'scroll', \n    },\n    thirdSubview: {\n        display: 'flex', \n        flexDirection: 'row',\n        marginTop: '3%',\n        justifyContent: 'space-between',\n    },\n    pressureView: {\n        display: 'flex', \n        flexDirection: 'column',\n        marginRight: '2%',\n        backgroundColor: '#f2f2f2',\n        alignItems: 'center',\n        width: '50%',\n        borderRadius: 4,\n    },\n    humidityView: {\n        display: 'flex', \n            flexDirection: 'column',\n            alignItems: 'center',\n            backgroundColor: '#f2f2f2',\n            marginLeft: '2%',\n            borderRadius: 4,\n            width: '50%',\n    },\n    sunriseView: {\n        display: 'flex', \n            flexDirection: 'column',\n            marginRight: '2%',\n            alignItems: 'flex-start',\n            width: '50%',\n            borderRadius: 4,\n    },\n    sunsetView: {\n        display: 'flex', \n        flexDirection: 'column',\n        alignItems: 'flex-end',\n        marginLeft: '2%',\n        borderRadius: 4,\n        width: '50%',\n    }\n}","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { MdLocationOn } from \"react-icons/md\";\nimport SecondComponent from \"./SecondComponent\";\nimport WeatherReport from \"./WeatherReport\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { API_KEY, GEO_API_KEY } from \"../constants\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nclass Home extends Component {\n  state = {\n    weekArr: [\n      { id: 1, day: \"Sun\", maxTemp: 28, minTemp: 19, status: \"Sunny\" },\n      { id: 2, day: \"Mon\", maxTemp: 23, minTemp: 14, status: \"Cloudy\" },\n      { id: 3, day: \"Tue\", maxTemp: 27, minTemp: 19, status: \"Sunny\" },\n      { id: 4, day: \"Wed\", maxTemp: 30, minTemp: 26, status: \"Sunny\" },\n      { id: 5, day: \"Thu\", maxTemp: 22, minTemp: 11, status: \"Sunny\" },\n      { id: 6, day: \"Fri\", maxTemp: 27, minTemp: 17, status: \"Rainfall\" },\n      { id: 7, day: \"Sat\", maxTemp: 21, minTemp: 12, status: \"Sunny\" }\n    ],\n    geoLocCity: '',\n    weatherUpdate: null,\n  };\n\n  getUserLocation = () => {\n    fetch(`https://geolocation-db.com/json/${GEO_API_KEY}`)\n      .then(response => response.json())\n      .then(responseData => {\n        this.setState({\n          geoLocCity: responseData.city\n        });\n      });\n  };\n  \n\n  getWeatherUpdate = (maxTemp, minTemp) => {\n    let {weekArr} = this.state;\n    let activeIndex = new Date().getDay();\n    weekArr[activeIndex].maxTemp = maxTemp;\n    weekArr[activeIndex].minTemp = minTemp;\n    this.setState({\n        weekArr: weekArr\n    })\n  };\n\n  componentDidMount() {\n    confirmAlert({\n      title: \"Weather App wants to know your location\",\n      message: \"\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: this.getUserLocation\n        },\n        {\n          label: \"No\"\n        }\n      ]\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.geoLocCity !== this.state.geoLocCity) {\n      let city = this.state.geoLocCity;\n      //let city = 'Chennai';\n      fetch(\n        `http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${city}&cnt=24&appid=${API_KEY}`\n      )\n        .then(response => response.json())\n        .then(responseData => {\n          this.setState({\n            weatherUpdate: responseData\n          });\n        });\n    }\n  }\n\n  render() {\n    let activeIndex = new Date().getDay();\n    return (\n      <div style={styles.mainStyle}>\n        <div style={styles.boxStyle}>\n          <MdLocationOn size=\"2em\" />\n          <input\n            type=\"search\"\n            className=\"search\"\n            style={{ width: \"90%\", border: \"none\" }}\n            placeholder={\"Search for a location\"}\n            onChange={e =>\n              this.setState({\n                geoLocCity: e.target.value\n              })\n            }\n            value={this.state.geoLocCity}\n          />\n          {/* </div> */}\n          <FaSearch size=\"2em\" />\n        </div>\n        <div style={styles.secondDiv}>\n          {this.state.weekArr.map((item, index) => {\n            return (\n              <SecondComponent\n                keyVal={index}\n                data={item}\n                activeIndex={activeIndex}\n              />\n            );\n          })}\n        </div>\n        <WeatherReport\n          data={this.state.weekArr[activeIndex]}\n          getWeatherUpdate={this.getWeatherUpdate}\n          weatherUpdate={this.state.weatherUpdate}\n        />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  mainStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"1.6%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    flexDirection: \"column\"\n  },\n  boxStyle: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: 80,\n    borderRadius: 8,\n    padding: \"1.6%\",\n    justifyContent: \"space-between\",\n    boxShadow: \"1px 4px 6px 1px #9E9E9E\",\n    width: \"100%\"\n  },\n  secondDiv: {\n    display: \"flex\",\n    marginTop: \"4%\",\n    flexDirection: \"row\",\n    flexGrow: 1,\n    width: \"100%\"\n  }\n};\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Home from './components/home';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}